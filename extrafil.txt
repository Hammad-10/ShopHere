  <div class="product-grid">
    <!-- Product 1 -->
    <a href="Product.html" class="product-item">
      <div>
        <img class="productImage" src="../assets/Images/BeautyCraftsSources/1.jpg" alt="Product 1">
        <h3>Hydrating Face Mist</h3>
        <p>$ 100</p>
        <button class="add-to-cart">Add to Cart</button>
      </div>
    </a>

    <!-- Product 2 -->
    <a href="Product.html" class="product-item">
      <div>
        <img class="productImage" src="../assets/Images/BeautyCraftsSources/2.jpg" alt="Product 2">
        <h3>Conatural Eye Serium</h3>
        <p>$ 200</p>
        <button class="add-to-cart">Add to Cart</button>
      </div>
    </a>

    <!-- Product 3 -->
    <a href="Product.html" class="product-item">
      <div>
        <img class="productImage" src="../assets/Images/BeautyCraftsSources/3.jpg" alt="Product 1">
        <h3>Hydrating Face Mist</h3>
        <p>$ 300</p>
        <button class="add-to-cart">Add to Cart</button>
      </div>
    </a>

    <!-- Product 4 -->
    <a href="Product.html" class="product-item">
      <div>
        <img class="productImage" src="../assets/Images/BeautyCraftsSources/4.webp" alt="Product 1">
        <h3>Hydrating Face Mist</h3>
        <p>$ 400</p>
        <button class="add-to-cart">Add to Cart</button>
      </div>
    </a>

    <!-- Product 5 -->
    <a href="Product.html" class="product-item">
      <div>
        <img class="productImage" src="../assets/Images/BeautyCraftsSources/5.webp" alt="Product 1">
        <h3>Hydrating Face Mist</h3>
        <p>$ 500</p>
        <button class="add-to-cart">Add to Cart</button>
      </div>
    </a>

    <!-- Product 6 -->
    <a href="Product.html" class="product-item">
      <div>
        <img class="productImage" src="../assets/Images/BeautyCraftsSources/6.webp" alt="Product 1">
        <h3>Hydrating Face Mist</h3>
        <p>$ 600</p>
        <button class="add-to-cart">Add to Cart</button>
      </div>
    </a>

  </div>


  --------------------------PRODUCT.PHP----------------------------------------------

  <?php


class Product extends Database
{
    private $db;

    public function __construct()
    {
        $this->db = parent::__construct();
    }

    public function insertProduct($sku, $productname, $price, $quantity)
    {
        try {
            $sql = "INSERT INTO Products (sku, name, price, quantity) VALUES (?, ?, ?, ?)";
            $stmt = $this->db->prepare($sql);

            if ($stmt === false) {
                throw new Exception("Prepare statement failed: " . $this->db->error);
            }

            $stmt->bind_param("ssii", $sku, $productname, $price, $quantity);

            $result = $stmt->execute();

            if ($result === false) {
                throw new Exception("Execute failed: " . $stmt->error);
            }

            return $result;
        } catch (Exception $e) {
            // Handle the exception
            $error = 'An error occurred while inserting the product: ' . $e->getMessage();

            // Optionally, log the error or display it
            echo '<div style="color: red;">' . htmlspecialchars($error) . '</div>';

            return false;
        }
    }

    public function insertProductImage($sku, $imagePath)
    {
        try {

            // getting sno of the inserted product
            $sql = "SELECT * from `Products` where `sku`='$sku'";
            $result = $this->db->query($sql);

            if ($result) {
                $row = $result->fetch_assoc();

                $sql = "INSERT INTO ProductImages (sno, image) VALUES (?, ?)";
                $stmt = $this->db->prepare($sql);

                if (!$stmt) {
                    throw new Exception("Prepare statement failed: " . $this->db->error);
                }

                $stmt->bind_param("is", $row['sno'], $imagePath);


                if (!$stmt->execute()) {
                    throw new Exception("Execute failed: " . $stmt->error);
                }

                return true;
            }





            // inserting Product images

        } catch (Exception $e) {
            // Handle the exception
            echo 'An error occurred while updating the product: ' . $e->getMessage();
            return false;
        }
    }

    public function display()
    {
        try {
            $bootstrapLinks = '
            <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
            <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js"></script>';

            $sql = "SELECT * FROM Products";
            $result = $this->db->query($sql);

            if (!$result) {
                throw new Exception("Query failed: " . $this->db->error);
            }

            echo '<h3 style = "margin-left:550px; margin-top: 25px; margin-bottom:25px"> Products</h3>';

            // Start generating the output
            $output = $bootstrapLinks . '<table class="table">
            <thead>
                <tr>
                    <th scope="col">SKU</th>
                    <th scope="col">NAME</th>
                    <th scope="col">PRICE</th>
                    <th scope="col">QUANTITY</th>
                    <th scope="col">Actions</th>
                </tr>
            </thead>
            <tbody>';

            // Generate table rows
            while ($row = $result->fetch_assoc()) {
                $output .= '<tr>';
                $output .= '<td>' . htmlspecialchars($row["sku"]) . '</td>';
                $output .= '<td>' . htmlspecialchars($row["name"]) . '</td>';
                $output .= '<td>' . htmlspecialchars($row["price"]) . '</td>';
                $output .= '<td>' . htmlspecialchars($row["quantity"]) . '</td>';
                $output .= '<td><a href="routes.php?page=View_specificProduct&sno=' . urlencode($row['sno']) . '" class="view btn btn-sm btn-primary">View</a></td>';
                $output .= '</tr>';
            }

            $output .= '</tbody>
        </table>';

            return $output;
        } catch (Exception $e) {
            // Handle the exception
            return 'An error occurred while displaying products: ' . $e->getMessage();
        }
    }



    //customer view all products

    public function displayProducts()
    {
        try {
            $bootstrapLinks = '
            <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
            <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js"></script>';
    
            $sql = "SELECT p.sno, p.sku, p.name, p.price, GROUP_CONCAT(pi.image) AS images
                    FROM Products p
                    LEFT JOIN ProductImages pi ON p.sno = pi.sno
                    GROUP BY p.sno, p.sku, p.name, p.price";
            $result = $this->db->query($sql);
    
            if (!$result) {
                throw new Exception("Query failed: " . $this->db->error);
            }
    
            
            $output = $bootstrapLinks;
    
            // Container for the product grid
            $output .= '<div class="container">';
            // $output .= '<h3 class="text-center my-4">Products</h3>';
            $output .= '<div class="row">';
    
            while ($row = $result->fetch_assoc()) {
                $output .= '<!-- Product ' . htmlspecialchars($row["sku"]) . ' -->';
                $output .= '<div class="col-md-4">';
                $output .= '<a href="routes.php?page=View_specificProduct&sno=' . urlencode($row['sno']) . '" class="product-item">';
                $output .= '<div class="card mb-4">';
                $output .= '<img class="productImage card-img-top" src="../assets/Images/BeautyCraftsSources/' . htmlspecialchars($row["sku"]) . '.jpg" alt="' . htmlspecialchars($row["name"]) . '">';
                $output .= '<div class="card-body">';
                $output .= '<h5 class="card-title">' . htmlspecialchars($row["name"]) . '</h5>';
                $output .= '<p class="card-text">$ ' . htmlspecialchars($row["price"]) . '</p>';
                $output .= '<a href="#" class="btn btn-primary add-to-cart">Add to Cart</a>';
                $output .= '</div>';
                $output .= '</div>';
                $output .= '</a>';
                $output .= '</div>'; // End col-md-4
            }
    
            // Close the row and container divs
            $output .= '</div>'; // End row
            $output .= '</div>'; // End container
    
            return $output;
        } catch (Exception $e) {
            // Handle the exception
            return 'An error occurred while displaying products: ' . $e->getMessage();
        }
    }
    

    public function displaySpecificProduct($sno)
    {
        try {
            $sql = "SELECT * FROM `Products` WHERE `sno` = ?";
            $stmt = $this->db->prepare($sql);

            if (!$stmt) {
                throw new Exception("Prepare statement failed: " . $this->db->error);
            }

            $stmt->bind_param("s", $sno);

            if (!$stmt->execute()) {
                throw new Exception("Execute failed: " . $stmt->error);
            }

            $result = $stmt->get_result();

            if ($result === false) {
                throw new Exception("Get result failed: " . $stmt->error);
            }

            return $result->fetch_assoc();
        } catch (Exception $e) {
            // Handle the exception
            echo 'An error occurred while fetching the product: ' . $e->getMessage();
            return false;
        }
    }

    public function updateProduct($sno, $sku, $name, $price, $quantity)
    {
        try {
            $sql = "UPDATE Products SET sku = ?, name = ?, price = ?, quantity = ? WHERE sno = ?";
            $stmt = $this->db->prepare($sql);

            if (!$stmt) {
                throw new Exception("Prepare statement failed: " . $this->db->error);
            }

            $stmt->bind_param('ssiii', $sku, $name, $price, $quantity, $sno);

            if (!$stmt->execute()) {
                throw new Exception("Execute failed: " . $stmt->error);
            }

            return true;
        } catch (Exception $e) {
            // Handle the exception
            echo 'An error occurred while updating the product: ' . $e->getMessage();
            return false;
        }
    }


    public function deleteProduct($sno)
    {
        try {
            $sql = "DELETE FROM Products WHERE sno = ?";
            $stmt = $this->db->prepare($sql);

            if (!$stmt) {
                throw new Exception("Prepare statement failed: " . $this->db->error);
            }

            $stmt->bind_param('i', $sno);

            if (!$stmt->execute()) {
                throw new Exception("Execute failed: " . $stmt->error);
            }

            return true;
        } catch (Exception $e) {
            // Handle the exception
            echo 'An error occurred while deleting the product: ' . $e->getMessage();
            return false;
        }
    }
}



/var/www/html/ptest/ShopHere/ProductImagesUpload/p...


 // admin view all Orders

    public function displayOrders()
    {
        try {
            $bootstrapLinks = '
          <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
          <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
          <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js"></script>';

            $sql = "SELECT * FROM Orders";
            $result = $this->db->query($sql);

            if (!$result) {
                throw new Exception("Query failed: " . $this->db->error);
            }

            echo '<h3 class="text-center my-3">Orders</h3>';

            // Start generating the output
            $output = $bootstrapLinks . '
          <div class="d-flex justify-content-center">
              <table class="table table-bordered w-auto">
                  <thead>
                      <tr>
                          <th scope="col">ORDER ID</th>
                          <th scope="col">PRODUCT</th>
                          <th scope="col">CUSTOMER ID</th>
                          <th scope="col">DATE</th>
                      </tr>
                  </thead>
                  <tbody>';

            // Generate table rows
            while ($row = $result->fetch_assoc()) {
                $output .= '<tr>';
                $output .= '<td>' . htmlspecialchars($row["orderId"]) . '</td>';
                $output .= '<td>' . htmlspecialchars($row["product"]) . '</td>';
                $output .= '<td>' . htmlspecialchars($row["customerId"]) . '</td>';
                $output .= '<td>' . htmlspecialchars($row["datetime"]) . '</td>';
                $output .= '</tr>';
            }

            $output .= '</tbody>
              </table>
          </div>';

            return $output;
        } catch (Exception $e) {
            // Handle the exception
            return 'An error occurred while displaying customers: ' . $e->getMessage();
        }
    }


    Login.js

    let submitbtn = document.getElementById('submitLogin');
submitbtn.addEventListener('click', buttonClickHandler);

function buttonClickHandler(event) {
    event.preventDefault(); // Prevent the default form submission

    console.log('You have clicked the submit btn');

    // Instantiate an xhr object
    const xhr = new XMLHttpRequest();

    // Open the object
    xhr.open('POST', '/ptest/ShopHere/models/Login.php', true);
    xhr.setRequestHeader('Content-type', 'application/json');

    // What to do when response is ready
    xhr.onload = function () {
        if (this.status === 200) {
            console.log(this.responseText);
            let response = JSON.parse(this.responseText);
            if (response.status === 'success') {
                // Redirect to login page
                window.location.href = '/ptest/ShopHere/views/admin/adminOptions.html';
            } else {
                console.log(response.message);
            }
        } else {
            console.log("Some error occurred");
        }
    }

    // Get form data and serialize it into a JSON object
    let form = document.getElementById('inputformLogin');
    let formData = new FormData(form);
    let jsonData = {};

    formData.forEach((value, key) => {
        jsonData[key] = value;
    });

    // Convert JSON object to string
    let params = JSON.stringify(jsonData);

    // Send the request with JSON data
    xhr.send(params);

    console.log("We are done!");
}


Login.php



<?php

$host = 'localhost';
$user = 'debian-sys-maint';
$pass = 'JbRt9bTnasitZnAJ';
$dbname = 'ShopHere';


// Connect to the database
$conn = mysqli_connect($host, $user, $pass, $dbname);

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get the raw POST data
    $json = file_get_contents('php://input');

    // Decode the JSON data
    $data = json_decode($json, true);

    // Extract username and password from the decoded data
    $adminId = $data['adminId'];
    $adminPassword = $data['adminPassword'];

    $sql = "SELECT * FROM Admin WHERE adminId='$adminId' AND adminPassword='$adminPassword'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {

        // session_start();

        // $_SESSION['adminId'] = $adminId;
     
        // If the user exists, send a success response
        echo json_encode(['status' => 'success', 'message' => 'Login successful']);
    } else {
        // If the user does not exist, send an error response
        echo json_encode(['status' => 'error', 'message' => 'Invalid username or password']);
    }
}


?>


<script>
    function placeOrder() {

        console.log('success Failure');

        window.location.href('/ptest/ShopHere/views/orderSuccessFailure.html');


        // Get the value of the customerName field
        // var customerName = document.getElementById('customerName').value;
        // var address = document.getElementById('address').value;
        // var phone = document.getElementById('phone').value;
        // var paymentMethod = document.getElementById('paymentMethod').value;
    
        // // Check if the customerName field is filled
        // if (customerName.trim() === '' || address === '' || phone === '' || paymentMethod === '') {
        //     // Show failure popup if customerName is empty
        //     document.getElementById('failurePopup').style.display = 'block';
        // } else {
        //     // Show success popup if customerName is filled
        //     document.getElementById('successPopup').style.display = 'block';
        // }
    }
    
    // function closePopup(popupId) {
    //     document.getElementById(popupId).style.display = 'none';
    // }
    </script>


<style>
.popup {
    display: none; 
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgb(0, 0, 0);
    background-color: rgba(0, 0, 0, 0.4);
    padding-top: 60px;
}

.popup-content {
    background-color: #fefefe;
    margin: 5% auto;
    padding: 20px;
    border: 1px solid #888;
    width: 80%;
    text-align: center;
    border-radius: 10px;
}

.close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
    cursor: pointer;
}

.close:hover,
.close:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
}
</style>


<!-- Success Popup -->
<div id="successPopup" class="popup">
    <div class="popup-content">
        <span class="close" onclick="closePopup('successPopup')">&times;</span>
        <p>Order placed successfully!</p>
    </div>
</div>

<!-- Failure Popup -->
<div id="failurePopup" class="popup">
    <div class="popup-content">
        <span class="close" onclick="closePopup('failurePopup')">&times;</span>
        <p>Failed to place order. Please try again.</p>
    </div>
</div>


    
document.ready(function(){
    console.log('document is ready');
    const removeButtons = document.querySelectorAll('.remove-item');
    removeButtons.forEach(button => {
        button.addEventListener("click", (e) => {
            console.log('remove btn clicked');
            const index = e.target.getAttribute('data-index');
            cartItems.splice(index, 1);
            updateCart(); // Re-render the cart with updated indices
        });
    });
})



=======
  aria-labelledby="staticBackdropLabel">
 <div class="offcanvas-header">
     <h5 class="offcanvas-title" id="staticBackdropLabel">Cart</h5>
     <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
 </div>
 <div class="offcanvas-body">
     <!-- Cart content goes here -->
     <div id="cartItemsList"></div>
 </div>

 <div class="btnsDiv"
 style="display: flex; flex-direction:column; justify-content: space-between; align-self: center;">
 <a href="/ptest/ShopHere/views/checkout.html" class="checkoutBtn" style="background-color: black;
 color: white;">Checkout</a>
 <a href="#" class="continueShopBtn" style="   background-color: white;
 color: black;
 border: 1px solid black;">Continue Shopping</a>
</div>
</div>
   
  
>>>>>>> master


LATEST categoryListing.html:

<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
  <link rel="stylesheet" href="../css/categoryListing.css">
  <link rel="stylesheet" href="../css/miniCart.css">
  <link rel="stylesheet" href="../css/navbar.css">
  <link rel="stylesheet" href="../css/footer.css">
  <script src="/ptest/ShopHere/js/LoadComponent.js"></script>




  <title>Product Grid</title>
</head>

<body>



  <div id="navbar">


  </div>

  <div class="alertmsg">

  </div>




  <!-- product-grid -->
  <div class="product-grid mt-5">
    <div class="container">
      <div class="row">
        <?php while ($row = $result->fetch_assoc()) { 
        $imagepaths = explode(',', $row['images']); // Split the images into an array
        $firstImage = $imagepaths[0]; // Get the first image from the array
        ?>
        <div class="col-md-4">
          <div class="product-item">
            <a href="routes.php?page=Customer_specificProduct&sno=<?php echo urlencode($row['sno']); ?>"
              class="product-link">
              <div class="card mb-4 text-center"> <!-- Added text-center class for horizontal centering -->
                <div class="card-img-wrapper d-flex justify-content-center align-items-center" style="height: 150px;">
                  <!-- Adjust height as needed -->
                  <img class="productImage" src="<?php echo htmlspecialchars($firstImage); ?>"
                    style="height: 150px; width: 150px;" alt="<?php echo htmlspecialchars($row['name']); ?>">
                  <!-- Image centered -->
                </div>
                <div class="card-body">
                  <h5 class="card-title" style="text-decoration: none;">
                    <?php echo htmlspecialchars($row['name']); ?>
                  </h5>
                  <p class="card-text">$
                    <?php echo htmlspecialchars($row['price']); ?>
                  </p>
                  <a href="#" class="btn btn-primary add-to-cart" data-product-sno="<?php echo $row['sno']; ?>"
                    data-product-price="<?php echo $row['price']; ?>">
                    Add to Cart</a>

                </div>
              </div>
            </a>
          </div>
        </div>
        <?php } ?>
      </div>
    </div>
  </div>





  <!-- miniCart -->
  <div class="offcanvas offcanvas-end" data-bs-backdrop="static" tabindex="-1" id="cartModal"
    aria-labelledby="staticBackdropLabel">
    <div class="offcanvas-header">
      <h5 class="offcanvas-title" id="staticBackdropLabel">Cart</h5>
      <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
      <div class="modal-dialog modal-lg">
        <div class="modal-body">
          <div id="cartItemsList">

            <!-- Cart items will be dynamically added here -->
            <?php while($row = $orderitems->fetch_assoc()){ 
  $imagepaths = explode(',', $row['image']); // Split the images into an array
$firstImage = $imagepaths[0]; // Get the first image from the array
?>
            <div class="imageDiv">
              <img alt="image" class="productImage" src="<?php echo htmlspecialchars($firstImage); ?>">
            </div>
            <div class="productDetailsdiv">
              <h5>
                <?php echo $row['name']; ?>
              </h5>
              <p><strong>Price:</strong>
                <?php echo $row['price']; ?>
              </p>
              <select title="quantity" id="quantity-<?php echo $index; ?>">
                <option value="1">1</option>
              </select>
              <button class="btn btn-danger btn-sm ms-2 remove-item" data-index="<?php echo $index; ?>">Remove</button>
            </div>
            <?php } ?>
          </div>
        </div>
      </div>
    </div>
    <div class="btnsDiv"
      style="display: flex; flex-direction:column; justify-content: space-between; align-self: center;">
      <a href="/ptest/ShopHere/routes.php?page=checkout" class="checkoutBtn" style="background-color: black;
    color: white;">Checkout</a>
      <a href="#" class="continueShopBtn" style="background-color: white;
    color: black;
    border: 1px solid black;">Continue Shopping</a>
    </div>
  </div>




  <footer id="footer">

    <!-- Copyright -->
  </footer>


  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
    crossorigin="anonymous"></script>


  <script src="/ptest/ShopHere/js/LoadComponent.js"></script>

  <script src="/ptest/ShopHere/js/cartCounter.js"></script>

  <!-- <script src="/ptest/ShopHere/js/addToCart.js"> </script> -->

  <script src="/ptest/ShopHere/js/cartajax.js"></script>

  



</body>

</html>